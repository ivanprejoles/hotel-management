// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum MemberRole {
  ADMIN
  GUEST
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  role MemberRole @default(GUEST)

  number String?
  email String @unique
  emailId String @unique
  
  referenceCode String? @unique
  tokens Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reservations Reservation[]
}

enum RoomStatus {
  Vacant
  Occupied
  Maintenance
}

model Room {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  status RoomStatus @default(Vacant)

  createdAt DateTime @default(now())

  reservations Reservation[]
}

model RoomDescription {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title String
  bedrooms Int
  description String
  value Float
  images String[]

  createdAt DateTime @default(now())
}

model Reservation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
 
  // user
  email String
  totalValue Float
  paid Boolean
  startDate DateTime
  endDate DateTime
  value Float

  // foreign key
  userId String @db.ObjectId
  roomId String @db.ObjectId

  createdAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}